<%layout('./partials/homeLayout')%>

<!-- <div class="position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center bg-light">
    <div class="col-md-5 p-lg-5 mx-auto my-5">
        <h1 class="display-4">Biker paradise</h1>
        <p class="lead">Explore the lastest news about motorbike</p>
        <a class="btn btn-outline-secondary" href="/forum">Getting started</a>
    </div>
</div> -->
<main id="vue-userView">
    <div class="jumbotron bg-menu m-md-3" style="padding: 5rem 3rem 1rem;">
        <h1 class="display-4">My Order</h1>
    </div>
    <div class="row overflow-hidden" style="padding: 0 5rem;">
        <div class="col col-8">
            <input type="text" placeholder="Search ..." class="form-control">
        </div>
        <div class="col col-2">
            <a class="btn btn-block btn-white" role="button" >Sort</a>   
        </div>
<!--    <div class="col col-2">
            <a href="/forum/newforum" class="btn btn-block btn-white"><i class="fas fa-plus"></i>Add new order</a>   
        </div>-->
        <div class="col col-2">
            <button type="button" class="btn-block btn btn-primary fas fa-plus" data-toggle="modal" data-target="#exampleModal">
                    Add new order
            </button>
        </div>
    </div>
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="exampleModalLabel">Add new order</h5>
                  <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                  </button>
                </div>
                <div class="modal-body">
                  <p>Please input Order Id:</p>
                  <input type="text" v-model="orderId" >
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                  <button type="button" class="btn btn-primary" @click="searchOrder" >Search</button>
                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <table class="table table-hover table-bordered ">
            <thead>
                <tr>
                    <th scope="col" class="col-3">Draft</th>
                    <th scope="col" class="col-3">Activated</th>
                    <th scope="col" class="col-3">Delivering</th>
                    <th scope="col" class="col-3">Completed</th>
                </tr>
            </thead>
            <tbody>
                 <!-- <div v-for="element in orderData"> 
                    <div style="text-align:left; margin-left: 30px;" class="row">
                          <p style="margin-right:40px" >Order Id: {{element.Id}}</p>
                          <p style="margin-right:40px">Total Amount : ${{element.Total}}</p>
                          <p style="margin-right:40px">Start Date : {{element.EffectiveDate}}</p>
                    </div>-->
                <tr v-for="element in orderData">
                    <td colspan="4">
                        <div class="progress" v-if="element.Status==='Cancel'">
                            <div class="progress-bar progress-bar-striped bg-danger"  role="progressbar" aria-valuenow="45" aria-valuemin="0" aria-valuemax="100" style="width: 100%"></div>
                        </div>
                        <div class="progress" v-else>
                          <div class="progress-bar progress-bar-striped bg-success"  role="progressbar" aria-valuenow="45" aria-valuemin="0" aria-valuemax="100" :style="'width:'+element.Progress+'%'">{{element.Progress}}%
                          </div>
                        </div>
                        <div style="text-align:left; margin-left: 30px; margin-top:20px;" class="row">
                            <p style="margin-right:40px" >Order Id: {{element.Id}}</p>
                            <p style="margin-right:40px">Total Amount : ${{element.Total}}</p>
                            <p style="margin-right:40px">Start Date : {{element.EffectiveDate}}</p>
                            <p style="margin-right:40px">Delivery estimate : {{element.Duration}} day(s)</p>
                            <button type="button" class="btn btn-info" data-toggle="collapse" :data-target="'#'+element.Id" aria-expanded="false" aria-controls="element.Id" style="margin-left: 325px; margin-bottom: 10px;margin-right:40px;">Order Products</button>
                        </div>
                        <div class="collapse multi-collapse" :id="element.Id">
                          <table class="table table-hover table-striped ">
                            <thead>
                              <tr>
                                <th scope="col" class="col-2">Id</th>
                                <th scope="col" class="col-4">Name</th>
                                <th scope="col" class="col-2">Unit Price</th>
                                <th scope="col" class="col-2">Quantity</th>
                                <th scope="col" class="col-2">Total Price</th>
                              </tr>
                            </thead>
                            <tbody>
                              <tr v-for="product in element.orderProducts">
                                <td>{{product.Product2.Id}}</td>
                                <td>{{product.Product2.Name}}</td>
                                <td>{{product.UnitPrice}}</td>
                                <td>{{product.Quantity}}</td>
                                <td>{{product.TotalPrice}}</td>
                              </tr>
                            </tbody> 
                          </table>
                        </div>
                        <div class="row" style="margin-left: 900px; margin-top: 20px;">
                            <button class="btn btn-primary" style="margin-right:40px" type="button" v-on:click="activeButton(element.Id)" v-if="element.Status==='Draft'">Activate</button>
                            <button class="btn btn-danger" style="margin-right:40px" type="button" v-on:click="cancelButton(element.Id)" v-if="element.Status==='Draft'|| element.Status==='Activated'">Cancel</button>
                            <button class="btn btn-success" style="margin-right:40px" type="button" v-if="element.Status==='Delivering'">Complete</button>
                            <button class="btn btn-secondary" style="margin-right:40px" type="button" v-on:click="reportButton(element.Id)" v-if="element.Status==='Activated'">Report</button>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="modal fade" id="confirmModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="exampleModalLongTitle">Payment Confirmation </h5>
                  <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                  </button>
                </div>
                <div class="modal-body">
                  <div>
                      <p>Do you agree payment for the order as following?</p>
                      <p class="font-weight-bold">Order Id: {{element.Id}}</p>
                      <p>Status: {{element.Status}}</p>
                      <p class="font-weight-bold">Ammount: {{element.Total}} Ether</p>
                  </div>
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                  <button type="button" class="btn btn-primary" @click="confirmOrder">Confirm</button>
                </div>
            </div>
        </div>
    </div>

    <!--<div class="row hidden" style="padding: 2rem 5rem 0;" id="filter">
        <legend class="col-form-label col-sm-2 pt-0">Sort by:</legend>
        <div class="col-sm-5">
            <div class="form-check">
                <input class="form-check-input" type="radio" v-model="filterType" value="name" id="1sttype" checked> 
                <label class="form-check-label" for="1sttype">Name</label> 
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" v-model="filterType" value="lastPost" id="2ndtype"> 
                <label class="form-check-label" for="2ndtype">Created Date</label> 
            </div>
        </div>
    </div>

    <div class="container-fluid" style="padding: 2rem 3rem 1rem;" id='vue-forum'>
        <table class="table table-hover table-bottom-border">
            <thead>
                <tr>
                    <th scope="col">Order Number</th>
                    <th scope="col">Created Date</th>
                    <th scope="col">Status</th>
                    <th scope="col">Description</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="row in filteredtableData">
                    <td><a v-bind:href="'/forum/thread?id='+row.id+'?name='+row.forumName">{{row.forumName}}</a></td>
                    <td>{{row.lastPost}}</td>
                    <td>{{row.thread}}</td>
                    <td>{{row.post}}</td>
                </tr>
            </tbody>
        </table>
    </div>-->
</main>
<script src="/javascripts/components/userViewControl.js" type="module"></script>
<!-- <script>
        window.addEventListener('load', async () => {
            // Modern dapp browsers...
            console.log('Load')
            if (window.ethereum) {
                window.web3 = new Web3(ethereum);
                try {
                    // Request account access if needed
                    await ethereum.enable();
                    // Acccounts now exposed
                    console.log(web3.eth.defaultAccount)
                    web3.eth.getTransactionCount(web3.eth.defaultAccount,'pending', (err, txCount) => {
                        // Build the transaction
                        console.log(txCount);
                        web3.eth.sendTransaction({
                            from:web3.eth.defaultAccount,
                            to: '0xE0cb3318D18be98b9ac0f24a64BCAC4E7c22BA4c',
                            value: '1000000000000000000',
                            gas: 2000000,
                            nonce: txCount,
                            chainId: 3
                        },function(error,hash){
                            if(error){console.log(error);}
                            else{console.log(hash);}
                        })

                        });
                    //web3.eth.getAccounts(function(error, accounts) {
                      //  if(error) {
                   //       console.log(error);
                   //     }
                   //     console.log(accounts[0]);
                   //     
                   //     web3.eth.getBalance(
                   //         accounts[0], 
                    //        function (error, result) {
                     //           if(error){console.log(error);}
                    //            else{console.log(result);}
                    //     });
                     //  });
                } catch (error) {
                    // User denied account access...
                }
            }
            // Legacy dapp browsers...
            else if (window.web3) {
                window.web3 = new Web3(web3.currentProvider);
                // Acccounts always exposed
                web3.eth.sendTransaction({/* ... */});
            }
            // Non-dapp browsers...
            else {
                console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');
            }
        });
</script> -->

